<?php

/**
 * BaseReposos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empleado_id
 * @property date $finicio
 * @property integer $dias
 * @property date $ffin
 * @property enum $forma1452
 * @property integer $especialidad_id
 * @property integer $centros_id
 * @property date $finireposocont
 * @property integer $diasrepcont
 * @property string $observacion
 * @property Empleado $Empleado
 * @property Especialidad $Especialidad
 * @property Centros $Centros
 * 
 * @method integer      getId()              Returns the current record's "id" value
 * @method integer      getEmpleadoId()      Returns the current record's "empleado_id" value
 * @method date         getFinicio()         Returns the current record's "finicio" value
 * @method integer      getDias()            Returns the current record's "dias" value
 * @method date         getFfin()            Returns the current record's "ffin" value
 * @method enum         getForma1452()       Returns the current record's "forma1452" value
 * @method integer      getEspecialidadId()  Returns the current record's "especialidad_id" value
 * @method integer      getCentrosId()       Returns the current record's "centros_id" value
 * @method date         getFinireposocont()  Returns the current record's "finireposocont" value
 * @method integer      getDiasrepcont()     Returns the current record's "diasrepcont" value
 * @method string       getObservacion()     Returns the current record's "observacion" value
 * @method Empleado     getEmpleado()        Returns the current record's "Empleado" value
 * @method Especialidad getEspecialidad()    Returns the current record's "Especialidad" value
 * @method Centros      getCentros()         Returns the current record's "Centros" value
 * @method Reposos      setId()              Sets the current record's "id" value
 * @method Reposos      setEmpleadoId()      Sets the current record's "empleado_id" value
 * @method Reposos      setFinicio()         Sets the current record's "finicio" value
 * @method Reposos      setDias()            Sets the current record's "dias" value
 * @method Reposos      setFfin()            Sets the current record's "ffin" value
 * @method Reposos      setForma1452()       Sets the current record's "forma1452" value
 * @method Reposos      setEspecialidadId()  Sets the current record's "especialidad_id" value
 * @method Reposos      setCentrosId()       Sets the current record's "centros_id" value
 * @method Reposos      setFinireposocont()  Sets the current record's "finireposocont" value
 * @method Reposos      setDiasrepcont()     Sets the current record's "diasrepcont" value
 * @method Reposos      setObservacion()     Sets the current record's "observacion" value
 * @method Reposos      setEmpleado()        Sets the current record's "Empleado" value
 * @method Reposos      setEspecialidad()    Sets the current record's "Especialidad" value
 * @method Reposos      setCentros()         Sets the current record's "Centros" value
 * 
 * @package    inassVreposos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReposos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reposos');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('empleado_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('finicio', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             'notblank' => false,
             ));
        $this->hasColumn('dias', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'notblank' => false,
             'length' => 4,
             ));
        $this->hasColumn('ffin', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             'notblank' => false,
             ));
        $this->hasColumn('forma1452', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'S',
              1 => 'N',
             ),
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('especialidad_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('centros_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('finireposocont', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             'notblank' => false,
             ));
        $this->hasColumn('diasrepcont', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'notblank' => false,
             'length' => 4,
             ));
        $this->hasColumn('observacion', 'string', 240, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'minlength' => 4,
             'length' => 240,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empleado', array(
             'local' => 'empleado_id',
             'foreign' => 'id'));

        $this->hasOne('Especialidad', array(
             'local' => 'especialidad_id',
             'foreign' => 'id'));

        $this->hasOne('Centros', array(
             'local' => 'centros_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}