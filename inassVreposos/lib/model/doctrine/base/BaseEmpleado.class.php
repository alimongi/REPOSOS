<?php

/**
 * BaseEmpleado
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $codigo
 * @property string $cargo
 * @property date $fingreso
 * @property enum $activoivss
 * @property integer $cedula
 * @property string $nombre
 * @property string $apellido
 * @property enum $sexo
 * @property date $fnacimiento
 * @property string $telefono
 * @property string $nhijos
 * @property integer $nestudios_id
 * @property integer $profesion_id
 * @property enum $estadociv
 * @property Nestudios $Nestudios
 * @property Profesion $Profesion
 * @property Doctrine_Collection $Reposos
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method string              getCodigo()       Returns the current record's "codigo" value
 * @method string              getCargo()        Returns the current record's "cargo" value
 * @method date                getFingreso()     Returns the current record's "fingreso" value
 * @method enum                getActivoivss()   Returns the current record's "activoivss" value
 * @method integer             getCedula()       Returns the current record's "cedula" value
 * @method string              getNombre()       Returns the current record's "nombre" value
 * @method string              getApellido()     Returns the current record's "apellido" value
 * @method enum                getSexo()         Returns the current record's "sexo" value
 * @method date                getFnacimiento()  Returns the current record's "fnacimiento" value
 * @method string              getTelefono()     Returns the current record's "telefono" value
 * @method string              getNhijos()       Returns the current record's "nhijos" value
 * @method integer             getNestudiosId()  Returns the current record's "nestudios_id" value
 * @method integer             getProfesionId()  Returns the current record's "profesion_id" value
 * @method enum                getEstadociv()    Returns the current record's "estadociv" value
 * @method Nestudios           getNestudios()    Returns the current record's "Nestudios" value
 * @method Profesion           getProfesion()    Returns the current record's "Profesion" value
 * @method Doctrine_Collection getReposos()      Returns the current record's "Reposos" collection
 * @method Empleado            setId()           Sets the current record's "id" value
 * @method Empleado            setCodigo()       Sets the current record's "codigo" value
 * @method Empleado            setCargo()        Sets the current record's "cargo" value
 * @method Empleado            setFingreso()     Sets the current record's "fingreso" value
 * @method Empleado            setActivoivss()   Sets the current record's "activoivss" value
 * @method Empleado            setCedula()       Sets the current record's "cedula" value
 * @method Empleado            setNombre()       Sets the current record's "nombre" value
 * @method Empleado            setApellido()     Sets the current record's "apellido" value
 * @method Empleado            setSexo()         Sets the current record's "sexo" value
 * @method Empleado            setFnacimiento()  Sets the current record's "fnacimiento" value
 * @method Empleado            setTelefono()     Sets the current record's "telefono" value
 * @method Empleado            setNhijos()       Sets the current record's "nhijos" value
 * @method Empleado            setNestudiosId()  Sets the current record's "nestudios_id" value
 * @method Empleado            setProfesionId()  Sets the current record's "profesion_id" value
 * @method Empleado            setEstadociv()    Sets the current record's "estadociv" value
 * @method Empleado            setNestudios()    Sets the current record's "Nestudios" value
 * @method Empleado            setProfesion()    Sets the current record's "Profesion" value
 * @method Empleado            setReposos()      Sets the current record's "Reposos" collection
 * 
 * @package    inassVreposos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmpleado extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('empleado');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('codigo', 'string', 120, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'minlength' => 4,
             'length' => 120,
             ));
        $this->hasColumn('cargo', 'string', 120, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'minlength' => 4,
             'length' => 120,
             ));
        $this->hasColumn('fingreso', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('activoivss', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'S',
              1 => 'N',
             ),
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('cedula', 'integer', 8, array(
             'type' => 'integer',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 8,
             ));
        $this->hasColumn('nombre', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'minlength' => 4,
             'length' => 120,
             ));
        $this->hasColumn('apellido', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'minlength' => 4,
             'length' => 120,
             ));
        $this->hasColumn('sexo', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'M',
              1 => 'F',
             ),
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('fnacimiento', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('telefono', 'string', 11, array(
             'type' => 'string',
             'unique' => false,
             'notnull' => false,
             'notblank' => false,
             'length' => 11,
             ));
        $this->hasColumn('nhijos', 'string', 11, array(
             'type' => 'string',
             'unique' => false,
             'notnull' => false,
             'notblank' => false,
             'length' => 11,
             ));
        $this->hasColumn('nestudios_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('profesion_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('estadociv', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Solter@',
              1 => 'Casad@',
              2 => 'Viud@',
              3 => 'Divorciad@',
              4 => 'Separad@',
              5 => 'Concubin@',
             ),
             'notnull' => false,
             'notblank' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Nestudios', array(
             'local' => 'nestudios_id',
             'foreign' => 'id'));

        $this->hasOne('Profesion', array(
             'local' => 'profesion_id',
             'foreign' => 'id'));

        $this->hasMany('Reposos', array(
             'local' => 'id',
             'foreign' => 'empleado_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}